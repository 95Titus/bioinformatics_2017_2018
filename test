#!/bin/bash

source ./functions

test_count_commits_absent_repo()
{
  assertEquals 0 `count_commits abentownername absentreponame absentcommitername`
}

test_count_commits_absent_user()
{
  assertEquals 0 `count_commits torvalds linux richelbilderbeek`
}

test_count_commits_user()
{
  assertEquals 1 `count_commits richelbilderbeek Cer2016 richelbilderbeek`
}

test_get_username_absent_file()
{
  if [[ -f tmp.txt ]] ; then rm tmp.txt; fi
  assertEquals "[unknown]" `get_username tmp.txt`
  assertEquals "[unknown]" `get_reponame tmp.txt`
}

test_get_username()
{
  if [[ -f tmp.txt ]] ; then rm tmp.txt; fi
  echo "username: my_username" > tmp.txt
  echo "reponame: my_reponame" >> tmp.txt
  assertEquals "my_username" `get_username tmp.txt`
  assertEquals "my_reponame" `get_reponame tmp.txt`
  rm tmp.txt
}

test_has_travis_with_python_absent_repo()
{
  assertEquals 0 `has_travis_with_python abentusername absentreponame`
}

test_has_travis_with_python_absent()
{
  assertEquals 0 `has_travis_with_python richelbilderbeek Cer2016`
}

test_has_travis_with_python_present()
{
  assertEquals 1 `has_travis_with_python jojje travis-python`
}

test_has_travis_find_find_dead_links_absent_repo()
{
  assertEquals 0 `has_travis_find_find_dead_links abentusername absentreponame`
}

test_has_travis_find_find_dead_links_absent()
{
  assertEquals 0 `has_travis_find_find_dead_links richelbilderbeek Cer2016`
}

test_has_travis_find_find_dead_links_present()
{
  assertEquals 1 `has_travis_find_find_dead_links richelbilderbeek travis_markdown-link-check`
}


test_has_travis_with_proselint_absent_repo()
{
  assertEquals 0 `has_travis_with_proselint abentusername absentreponame`
}

test_has_travis_with_proselint_absent_proselint()
{
  assertEquals 0 `has_travis_with_proselint richelbilderbeek Cer2016`
}

test_has_travis_with_proselint_present()
{
  assertEquals 1 `has_travis_with_proselint richelbilderbeek travis_proselint`
}

test_has_travis_absent()
{
  assertEquals 0 `has_readme abentusername absentreponame`
}

test_has_travis_present()
{
  assertEquals 1 `has_readme richelbilderbeek correct_cpp`
}

test_has_readme_with_presentation_absent_repo()
{
  assertEquals 0 `has_readme_with_presentation abentusername absentreponame`
}

test_has_readme_with_presentation_absent_presentation()
{
  assertEquals 0 `has_readme_with_presentation richelbilderbeek Cer2016`
}

test_has_readme_with_presentation_present_presentation()
{
  assertEquals 1 `has_readme_with_presentation richelbilderbeek BoostGraphTutorial`
}

test_has_readme_with_picture_absent_repo()
{
  assertEquals 0 `has_readme_with_picture abentusername absentreponame`
}

test_has_readme_with_picture_absent_picture()
{
  assertEquals 0 `has_readme_with_picture richelbilderbeek Cer2016`
}

test_has_readme_with_picture_present_picture()
{
  assertEquals 1 `has_readme_with_picture richelbilderbeek Dojo`
}

test_has_readme_absent()
{
  assertEquals 0 `has_readme abentusername absentreponame`
}

test_has_readme_present()
{
  assertEquals 1 `has_readme richelbilderbeek correct_cpp`
}


test_get_grade_no_grade_me()
{
  assertEquals 1 `get_grade absent_file.txt`
}

test_get_grade_fail_all()
{
  echo "username: absent" > fail_all.txt
  echo "reponame: absent_too" >> fail_all.txt
  assertEquals 1 `get_grade fail_all.txt`
  rm fail_all.txt
}

test_pass_build_passes()
{
  # richelbilderbeek/correct_cpp passes
  assertEquals 1 `pass_build richelbilderbeek correct_cpp`
}

test_pass_build_fails()
{
  # richelbilderbeek/correct_cpp_scoreboard passes fails
  assertEquals 0 `pass_build richelbilderbeek correct_cpp_scoreboard`
}

# load shunit2
. ../shunit2/shunit2