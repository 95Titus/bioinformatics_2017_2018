#!/bin/bash


# Show the grade, from the number of points
# @param $1: n_points
# @return Nothing
function show_grade {
  n_points=$1
  echo "n_points: "$n_points
  if [[ n_points < 1 ]]; then $n_points=$((n_points+1)); fi
  echo "n_points (after correcting for minumum): "$n_points
  echo "Grade: "$n_points
}

# Show the grade, from the number of points
# @param $1: username
# @param $2: reponame
# @return 1 if pass, 0 if fails
function pass_build {
  pass=`travis status --repo $1/$2 --no-interactive 2>/dev/null | egrep "passed" | wc --words | cut -f 1 -d " "`
  echo $pass
}

# Get the number of points, for a known user and repo
# @param $1: username
# @param $2: reponame
# @return 1 if pass, 0 if fails
function get_points {

  # Start grading
  point_one=`pass_build $username correct_cpp_scoreboard`
  point_two=`pass_build $username correct_cpp_hello`

  # Show report
  echo >&2 "Report"
  echo >&2 "1: correct_cpp_scoreboard: "$point_one
  echo >&2 "2: correct_cpp_hello: "$point_two

  n_points=$((point_one + point_two))
  echo $n_points
}

# Get the grade, after extracing user and repo from file
# @param $1: filename
function get_grade {

  # No text file results in the grade 1
  if [[ ! -f $1 ]] ; 
  then
    # echo >&2 "File '"$1"' not found"
    echo "1"
    return
  fi

  # Username is in the first line, after a whitespace
  username=`cat grade_me.txt | head -n 1 | tail -n 1 | cut -d " " -f 2`

  # Reponame is in the first line, after a whitespace
  reponame=`cat grade_me.txt | head -n 2 | tail -n 1 | cut -d " " -f 2`

  # echo >&2 "Username: "$username
  # echo >&2 "Reponame: "$reponame
 
  grade=`get_points $username $reponame`
  if [[ $grade < 1 ]]; 
  then 
    echo "1"; 
  else 
    echo $grade
  fi
}
